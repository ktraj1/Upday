//*create table session_events(id varchar2(30),user_id varchar2(30),session_id varchar2(30), event_name varchar2(100),event_duration integer, at timestamp

SELECT 	id1,
	at1 
	max(CASE when rn1=1 then vv end )  AS name_1, 
	max(CASE when rn1=1 then no1 end) AS duration_1,
	max(CASE when rn1=1 then dur1 end) AS event_count_1, 
	max(CASE when rn1=2 then vv end )  AS name_2, 
	max(CASE when rn1=2 then no1 end) AS duration_2,
	max(CASE when rn1=2 then dur1 end) AS event_count_2,
	max(CASE when rn1=3 then vv end )  AS name_3, 
	max(CASE when rn1=3 then no1 end) AS duration_3,
	max(CASE when rn1=3 then dur1 end) AS event_count_3 from
( 
	SELECT 	b.session_id id1,
		b.at at1,
		SUM(b.event_duration)over(PARTITION BY b.session_id,b.vv ORDER BY BY b.session_id) no1,
		COUNT(b.session_id)over(PARTITION BY b.session_id,b.vv ORDER BY BY b.session_id) dur1,
		b.vv AS vv,
		b.rn AS rn1 from 
			(SELECT  	id,
					user_id,
					session_id, 
					regexp_substr(event_name,'[^,]+',1,customers_seq) AS vv,
					event_duration,
					at, 
					row_number() over(PARTITION BY session_id ORDER BY BY session_id ) rn
			FROM  	session_events b,
    				emp1
			WHERE customers_seq BETWEEN 1 AND  (LENGTH(event_name) + 1 - LENGTH(replace(event_name, ',','')))
			ORDER BY BY event_name,customers_seq) b
) k
group BY id1,at1, at2